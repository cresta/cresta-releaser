apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cresta-releaser.fullname" . }}
  labels:
    {{- include "cresta-releaser.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cresta-releaser.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cresta-releaser.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cresta-releaser.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: LOG_LEVEL
              value: {{ .Values.logLevel }}
            - name: REPO_NAME
              value: {{ .Values.repoURL }}
            - name: REPO_DISK_LOCATION
              value: {{ .Values.repoDiskLocation }}
            - name: LISTEN_ADDR
              value: {{ .Values.listenAddress }}
            - name: GITHUB_APP_ID
              value: {{ .Values.github.appId }}
            - name: GITHUB_INSTALLATION_ID
              value: {{ .Values.github.installId }}
            - name: GITHUB_PEM_KEY_LOC
              value: {{ .Values.github.pemKeyPath }}
            - name: GITHUB_TOKEN
              value: {{ .Values.github.token }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - mountPath: /repo
              name: repo-checkout
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.github.mountSecretName }}
          - mountPath: /git
            name: git-secret
            readOnly: true
          {{- end }}
      volumes:
        - name: repo-checkout
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.github.mountSecretName }}
      - name: git-secret
        secret:
          defaultMode: 256
          secretName: {{ .Values.github.mountSecretName }}
      {{- end }}
